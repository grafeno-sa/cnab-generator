{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["FormBatchOperations","props","updateOperation","operationIndex","fieldName","value","newOperations","operations","slice","setOperations","removeOperation","operationsCopy","flat","formatCnabContent","fundField","HEADER_FIELDS","fundDocumentSliceSize","endIndex","startIndex","formattedFundDocument","fundDocument","padStart","header","headerLineTemplate","replaceAt","body","map","operation","formattedLine","bodyLineTemplate","fields","forEach","field","sliceSize","formattedValue","name","DEFAULT_FOOTER_LINE_TEMPLATE","join","onClick","createOperation","setLargeCnabModeEnabled","downloadAsTxt","largeCnabModeEnabled","index","description","renderOperationForm","style","width","height","whiteSpace","overflow","onChange","Date","getTime","textAlign","renderOperationFormField","key","options","e","target","option","type","maxLength","count","autoFill","i","newOperation","defaultValue","undefined","push","ACQUISITION_FIELDS","_options","faker","random","alphaNumeric","generate","SETTLEMENT_FIELDS","matchingAcquisition","acquisitions","numeroDocumentoRecebivel","CHARGE_SETTLEMENT_FIELDS","REPURCHASE_FIELDS","DEFAULT_HEADER_LINE_TEMPLATE","ACQUISITION_BODY_LINE_TEMPLATE","SETTLEMENT_BODY_LINE_TEMPLATE","CHARGE_SETTLEMENT_BODY_LINE_TEMPLATE","REPURCHASE_BODY_LINE_TEMPLATE","ACQUISITION","SETTLEMENT","CHARGE_SETTLEMENT","REPURCHASE","text","element","document","createElement","operationName","nameDictionary","translateOperationName","operationType","fileName","length","setAttribute","encodeURIComponent","display","appendChild","click","removeChild","String","prototype","replacement","this","substr","App","useState","setFundDocument","setOperationType","setAcquisitions","settlements","setSettlements","chargeSettlements","setChargeSettlements","repurchases","setRepurchases","formProps","acquisition","settlement","chargeSettlement","repurchase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oOA2FMA,EAAsB,SAACC,GAC3B,IAAMC,EAAkB,SAACD,EAAOE,EAAgBC,EAAWC,GACzD,IAAMC,EAAgBL,EAAMM,WAAWC,QAEvCF,EAAcH,GAAgBC,GAAaC,EAE3CJ,EAAMQ,cAAcH,IAGhBI,EAAkB,SAACP,GACvB,IAAIQ,EAAiBV,EAAMM,WAAWC,eAE/BG,EAAeR,GAEtBF,EAAMQ,cAAcE,EAAeC,KAAK,KAGpCC,EAAoB,WACxB,IAAMC,EAAYC,EAAc,GAC1BC,EAAwBF,EAAUG,SAAWH,EAAUI,WAAa,EACpEC,EAAwBlB,EAAMmB,aAAaC,SAC/CL,EACA,KAEIM,EAASrB,EAAMsB,mBAAmBC,UACtCV,EAAUI,WAAa,EACvBC,GAEIM,EAAOxB,EAAMM,WAAWmB,KAAI,SAACC,GACjC,IAAIC,EAAgB3B,EAAM4B,iBAe1B,OAbA5B,EAAM6B,OAAOC,SAAQ,SAACC,GACpB,IAAMC,EAAYD,EAAMf,SAAWe,EAAMd,WAAa,EAChDgB,GAAkBP,EAAUK,EAAMG,OAAS,IAAId,SACnDY,EACA,KAGFL,EAAgBA,EAAcJ,UAC5BQ,EAAMd,WAAa,EACnBgB,MAIGN,KAGT,MAAO,CAACN,GAAD,mBAAYG,GAAZ,CAAkBW,IAA8BC,KAAK,OAG9D,OACE,qCACE,oFACA,gCACE,wBACEC,QAAS,kBACPC,EAAgBtC,EAAOA,EAAMM,WAAYN,EAAMQ,cAAeR,EAAMuC,wBAAyB,IAFjG,+BAOA,uBACA,wBACEF,QAAS,kBACPC,EAAgBtC,EAAOA,EAAMM,WAAYN,EAAMQ,cAAeR,EAAMuC,wBAAyB,KAFjG,iCAOA,uBACA,wBACEF,QAAS,kBACPC,EAAgBtC,EAAOA,EAAMM,WAAYN,EAAMQ,cAAeR,EAAMuC,wBAAyB,MAFjG,kCAOA,uBACA,wBACEF,QAAS,kBACPC,EAAgBtC,EAAOA,EAAMM,WAAYN,EAAMQ,cAAeR,EAAMuC,wBAAyB,MAFjG,oCAOA,uBACA,wBACEF,QAAS,kBACPC,EAAgBtC,EAAOA,EAAMM,WAAYN,EAAMQ,cAAeR,EAAMuC,wBAAyB,MAFjG,qCAOA,uBACA,wBACEF,QAAS,kBACPC,EAAgBtC,EAAOA,EAAMM,WAAYN,EAAMQ,cAAeR,EAAMuC,wBAAyB,OAFjG,qCAOA,uBACA,wBACEF,QAAS,kBACPC,EAAgBtC,EAAOA,EAAMM,WAAYN,EAAMQ,cAAeR,EAAMuC,wBAAyB,MAFjG,qCAOA,uBACA,wBACEF,QAAS,kBACPC,EAAgBtC,EAAOA,EAAMM,WAAYN,EAAMQ,cAAeR,EAAMuC,wBAAyB,MAFjG,yCAQF,uBACA,8BACE,wBAAQF,QAAS,kBAAMG,EAAcxC,EAAOY,MAA5C,2BAIF,uBAEEZ,EAAMyC,sBACL,gLAIAzC,EAAMyC,sBACL,gCACE,kCACE,gCACE,+BACE,uBACA,uCACCzC,EAAM6B,OAAOJ,KAAI,SAACM,EAAOW,GAAR,OAChB,6BAAiBX,EAAMY,aAAdD,WAIf,gCACG1C,EAAMM,WAAWmB,KAAI,SAACC,EAAWgB,GAAZ,OACpBE,EACE5C,EACA0B,EACAgB,EACAzC,EACAQ,WAKR,0BAEEoC,MAAO,CACLC,MAAO,OACPC,OAAQ,QACRC,WAAY,SACZC,SAAU,QAEZ7C,MAAOQ,IACPsC,SAAU,eARL,IAAIC,MAAOC,kBAiBxBR,EAAsB,SAC1B5C,EACA0B,EACAxB,EACAD,EACAQ,GAEA,OACE,+BACE,6BACE,wBAAQ4B,QAAS,kBAAM5B,EAAgBP,IAAvC,uBAEF,oBAAI2C,MAAO,CAAEQ,UAAW,UAAxB,SAAqCnD,EAAiB,IACrDF,EAAM6B,OAAOJ,KAAI,SAACM,GAAD,OAChBuB,EACEtD,EACA0B,EACAxB,EACAD,EACA8B,QAXG7B,IAkBPoD,EAA2B,SAC/BtD,EACA0B,EACAxB,EACAD,EACA8B,GAEA,IAAMwB,EAAG,UAAMrD,EAAN,YAAwB6B,EAAMG,MACvC,OACE,6BACGH,EAAMyB,QACL,wBACEpD,MAAOsB,EAAUK,EAAMG,MACvBgB,SAAU,SAACO,GAAD,OACRxD,EAAgBD,EAAOE,EAAgB6B,EAAMG,KAAMuB,EAAEC,OAAOtD,QAHhE,SAMG2B,EAAMyB,QAAQ/B,KAAI,SAACkC,EAAQjB,GAAT,OACjB,wBAAoBtC,MAAOuD,EAAOvD,MAAlC,SACGuD,EAAOhB,aADGD,QAMjB,uBACEkB,KAAK,OACLC,UAAW9B,EAAM8B,UACjBzD,MAAOsB,EAAUK,EAAMG,MACvBgB,SAAU,SAACO,GAAD,OACRxD,EAAgBD,EAAOE,EAAgB6B,EAAMG,KAAMuB,EAAEC,OAAOtD,WApB3DmD,IA4BPjB,EAAkB,SACtBtC,EACAM,EACAE,EACA+B,GAMA,IAHI,IAFJuB,EAEG,uDAFK,EACRC,IACG,yDACC1D,EAAgB,GADjB,WAGM2D,GACP,IAAIC,EAAe,GAEnBjE,EAAM6B,OAAOC,SAAQ,SAACC,GACpBkC,EAAalC,EAAMG,MAAQ6B,EACO,oBAAvBhC,EAAMmC,aACXnC,EAAMmC,aAAa,CAAElE,MAAOA,EAAO0C,MAAOsB,IAC1CjC,EAAMmC,kBACRC,KAGN9D,EAAc+D,KAAKH,IAXZD,EAAI,EAAGA,EAAIF,EAAOE,IAAM,EAAxBA,GAcTzB,EAAwBuB,EAAQ,KAChCtD,EAAc,GAAD,mBAAKF,GAAeD,KAG7BS,EAAgB,CACpB,CACEoB,KAAM,iBACNS,YAAa,gBACb1B,WAAY,GACZD,SAAU,GACVkD,aAAc,iBACdL,UAAW,KAITQ,EAAqB,CACzB,CACEnC,KAAM,2BACNS,YAAa,iCACb1B,WAAY,GACZD,SAAU,GACVkD,aAAc,SAACI,GAAD,OAAcC,IAAMC,OAAOC,aAAa,KACtDZ,UAAW,IAEb,CACE3B,KAAM,cACNS,YAAa,kBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,iBACdL,UAAW,IAEb,CACE3B,KAAM,cACNS,YAAa,qBACb1B,WAAY,GACZD,SAAU,GACVkD,aAAc,KACdV,QAAS,CACP,CACEpD,MAAO,KACPuC,YAAa,0BAEf,CACEvC,MAAO,KACPuC,YAAa,2BAGjBkB,UAAW,GAEb,CACE3B,KAAM,gBACNS,YAAa,uBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,KACdV,QAAS,CACP,CACEpD,MAAO,KACPuC,YAAa,aAEf,CACEvC,MAAO,KACPuC,YAAa,UAEf,CACEvC,MAAO,KACPuC,YAAa,YAEf,CACEvC,MAAO,KACPuC,YAAa,OAEf,CACEvC,MAAO,KACPuC,YAAa,uBAEf,CACEvC,MAAO,KACPuC,YAAa,WAGjBkB,UAAW,GAEb,CACE3B,KAAM,kBACNS,YAAa,qBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,SAACI,GAAD,OAAcI,eAC5Bb,UAAW,IAEb,CACE3B,KAAM,cACNS,YAAa,gCACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,SACdL,UAAW,GAEb,CACE3B,KAAM,iBACNS,YAAa,iCACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,SACdL,UAAW,GAEb,CACE3B,KAAM,iBACNS,YAAa,2BACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,QACdL,UAAW,IAEb,CACE3B,KAAM,eACNS,YAAa,gBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,SACdL,UAAW,IAEb,CACE3B,KAAM,0BACNS,YAAa,gBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,KACdL,UAAW,IAITc,EAAoB,CACxB,CACEzC,KAAM,2BACNS,YAAa,iCACb1B,WAAY,GACZD,SAAU,GACVkD,aAAc,SAACV,GACb,IAAMoB,EAAsBpB,EAAQxD,MAAM6E,aAAarB,EAAQd,OAC/D,OAAOkC,EACHA,EAAoBE,yBACpB,IAENjB,UAAW,IAEb,CACE3B,KAAM,YACNS,YAAa,aACb1B,WAAY,GACZD,SAAU,GACVkD,aAAc,SACdL,UAAW,IAEb,CACE3B,KAAM,kBACNS,YAAa,sBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,IACdL,UAAW,IAEb,CACE3B,KAAM,0BACNS,YAAa,gBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,KACdV,QAAS,CACP,CACEpD,MAAO,KACPuC,YAAa,eAEf,CACEvC,MAAO,KACPuC,YAAa,kBAGjBkB,UAAW,IAITkB,EAA2B,CAC/B,CACE7C,KAAM,2BACNS,YAAa,iCACb1B,WAAY,GACZD,SAAU,GACVkD,aAAc,SAACV,GACb,IAAMoB,EAAsBpB,EAAQxD,MAAM6E,aAAarB,EAAQd,OAC/D,OAAOkC,EACHA,EAAoBE,yBACpB,IAENjB,UAAW,IAEb,CACE3B,KAAM,YACNS,YAAa,aACb1B,WAAY,GACZD,SAAU,GACVkD,aAAc,SACdL,UAAW,IAEb,CACE3B,KAAM,kBACNS,YAAa,sBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,IACdL,UAAW,KAITmB,EAAoB,CACxB,CACE9C,KAAM,2BACNS,YAAa,iCACb1B,WAAY,GACZD,SAAU,GACVkD,aAAc,SAACI,GAAD,OAAcC,IAAMC,OAAOC,aAAa,KACtDZ,UAAW,IAEb,CACE3B,KAAM,0BACNS,YAAa,gBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,KACdV,QAAS,CACP,CACEpD,MAAO,KACPuC,YAAa,mBAEf,CACEvC,MAAO,KACPuC,YAAa,iBAEf,CACEvC,MAAO,KACPuC,YAAa,gBAGjBkB,UAAW,GAEb,CACE3B,KAAM,cACNS,YAAa,kBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,iBACdL,UAAW,IAEb,CACE3B,KAAM,kBACNS,YAAa,qBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,SAACI,GAAD,OAAcI,eAC5Bb,UAAW,IAEb,CACE3B,KAAM,cACNS,YAAa,gCACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,SACdL,UAAW,GAEb,CACE3B,KAAM,iBACNS,YAAa,iCACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,SACdL,UAAW,GAEb,CACE3B,KAAM,iBACNS,YAAa,2BACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,IACdL,UAAW,IAEb,CACE3B,KAAM,eACNS,YAAa,gBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,IACdL,UAAW,IAEb,CACE3B,KAAM,YACNS,YAAa,aACb1B,WAAY,GACZD,SAAU,GACVkD,aAAc,IACdL,UAAW,IAEb,CACE3B,KAAM,kBACNS,YAAa,sBACb1B,WAAY,IACZD,SAAU,IACVkD,aAAc,IACdL,UAAW,KAIToB,EACJ,+bAKIC,EACJ,+bAEIC,EACJ,+bAEIC,EACJ,mZAEIC,EACJ,mZAEIlD,EACJ,+bAEImD,EAAc,cAEdC,EAAa,aAEbC,EAAoB,mBAEpBC,EAAa,aAabjD,EAAgB,SAACxC,EAAO0F,GAC5B,IAAMC,EAAUC,SAASC,cAAc,KAClCC,EAbwB,SAACpE,GAC/B,IAAIqE,EAAiB,GAOpB,OALAA,EAAeT,GAAe,kBAC9BS,EAAeR,GAAc,QAC7BQ,EAAeP,GAAqB,wBACpCO,EAAeN,GAAc,WAEtBM,EAAerE,GAKDsE,CAAuBhG,EAAMiG,eAC5CC,EAAQ,WAAM,IAAI/C,MAAOC,UAAjB,mBAAqC0C,EAArC,cAAwD9F,EAAMM,WAAW6F,OAAzE,eAEfR,EAAQS,aACL,OACA,iCAAmCC,mBAAmBX,IAExDC,EAAQS,aAAa,WAAYF,GACjCP,EAAQ9C,MAAMyD,QAAU,OAExBV,SAASpE,KAAK+E,YAAYZ,GAE1BA,EAAQa,QAERZ,SAASpE,KAAKiF,YAAYd,IAI5Be,OAAOC,UAAUpF,UAAY,SAAUmB,EAAOkE,GAC5C,OACEC,KAAKC,OAAO,EAAGpE,GACfkE,EACAC,KAAKC,OAAOpE,EAAQkE,EAAYT,SAIrBY,MAxtBH,SAAC/G,GAAW,IAAD,EACmBgH,mBAAShH,EAAMmB,cADlC,mBACdA,EADc,KACA8F,EADA,OAEqBD,mBAAShH,EAAMiG,eAFpC,mBAEdA,EAFc,KAECiB,EAFD,OAGmBF,mBAAS,IAH5B,mBAGdnC,EAHc,KAGAsC,EAHA,OAIiBH,mBAAS,IAJ1B,mBAIdI,EAJc,KAIDC,EAJC,OAK6BL,mBAAS,IALtC,mBAKdM,EALc,KAKKC,EALL,OAMiBP,mBAAS,IAN1B,mBAMdQ,EANc,KAMDC,EANC,OAOmCT,oBAAS,GAP5C,mBAOdvE,EAPc,KAOQF,EAPR,KASfmF,EAAY,CAChBC,YAAa,CACXrH,WAAYuE,EACZrE,cAAe2G,EACf1E,qBAAsBA,EACtBF,wBAAyBA,EACzBV,OAAQwC,EACRzC,iBAAkBsD,EAClB5D,mBAAoB2D,GAEtB2C,WAAY,CACV/C,aAAcA,EACdvE,WAAY8G,EACZ5G,cAAe6G,EACf5E,qBAAsBA,EACtBF,wBAAyBA,EACzBV,OAAQ8C,EACR/C,iBAAkBuD,EAClB7D,mBAAoB2D,GAEtB4C,iBAAkB,CAChBhD,aAAcA,EACdvE,WAAYgH,EACZ9G,cAAe+G,EACf9E,qBAAsBA,EACtBF,wBAAyBA,EACzBV,OAAQkD,EACRnD,iBAAkBwD,EAClB9D,mBAAoB2D,GAEtB6C,WAAY,CACVxH,WAAYkH,EACZhH,cAAeiH,EACfhF,qBAAsBA,EACtBF,wBAAyBA,EACzBV,OAAQmD,EACRpD,iBAAkByD,EAClB/D,mBAAoB2D,IAIxB,OACE,gCACE,qCACE,kEACA,gCACE,kDACA,uBACErB,KAAK,OACLxD,MAAOe,EACP+B,SAAU,SAACO,GAAD,OAAOwD,EAAgBxD,EAAEC,OAAOtD,QAC1CyD,UAAW,QAGf,gCACE,oDACA,yBACEzD,MAAO6F,EACP/C,SAAU,SAACO,GAAD,OAAOyD,EAAiBzD,EAAEC,OAAOtD,QAF7C,UAIE,wBAAQA,MAAOkF,EAAf,6BACA,wBAAQlF,MAAOmF,EAAf,mBACA,wBAAQnF,MAAOoF,EAAf,iCACA,wBAAQpF,MAAOqF,EAAf,+BAILQ,GACC,cAAC,EAAD,2BACMyB,EAAUzB,IADhB,IAEEA,cAAeA,EACf9E,aAAcA,SCxET4G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKvH,aAAc,iBAAkB8E,cAJrB,kBAMlBL,SAAS+C,eAAe,SAM1BZ,K","file":"static/js/main.fe7ab80f.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { generate } from 'gerador-validador-cpf'\nimport faker from 'faker'\n\nconst App = (props) => {\n  const [fundDocument, setFundDocument] = useState(props.fundDocument);\n  const [operationType, setOperationType] = useState(props.operationType);\n  const [acquisitions, setAcquisitions] = useState([]);\n  const [settlements, setSettlements] = useState([]);\n  const [chargeSettlements, setChargeSettlements] = useState([]);\n  const [repurchases, setRepurchases] = useState([]);\n  const [largeCnabModeEnabled, setLargeCnabModeEnabled] = useState(false);\n\n  const formProps = {\n    acquisition: {\n      operations: acquisitions,\n      setOperations: setAcquisitions,\n      largeCnabModeEnabled: largeCnabModeEnabled,\n      setLargeCnabModeEnabled: setLargeCnabModeEnabled,\n      fields: ACQUISITION_FIELDS,\n      bodyLineTemplate: ACQUISITION_BODY_LINE_TEMPLATE,\n      headerLineTemplate: DEFAULT_HEADER_LINE_TEMPLATE,\n    },\n    settlement: {\n      acquisitions: acquisitions,\n      operations: settlements,\n      setOperations: setSettlements,\n      largeCnabModeEnabled: largeCnabModeEnabled,\n      setLargeCnabModeEnabled: setLargeCnabModeEnabled,\n      fields: SETTLEMENT_FIELDS,\n      bodyLineTemplate: SETTLEMENT_BODY_LINE_TEMPLATE,\n      headerLineTemplate: DEFAULT_HEADER_LINE_TEMPLATE,\n    },\n    chargeSettlement: {\n      acquisitions: acquisitions,\n      operations: chargeSettlements,\n      setOperations: setChargeSettlements,\n      largeCnabModeEnabled: largeCnabModeEnabled,\n      setLargeCnabModeEnabled: setLargeCnabModeEnabled,\n      fields: CHARGE_SETTLEMENT_FIELDS,\n      bodyLineTemplate: CHARGE_SETTLEMENT_BODY_LINE_TEMPLATE,\n      headerLineTemplate: DEFAULT_HEADER_LINE_TEMPLATE,\n    },\n    repurchase: {\n      operations: repurchases,\n      setOperations: setRepurchases,\n      largeCnabModeEnabled: largeCnabModeEnabled,\n      setLargeCnabModeEnabled: setLargeCnabModeEnabled,\n      fields: REPURCHASE_FIELDS,\n      bodyLineTemplate: REPURCHASE_BODY_LINE_TEMPLATE,\n      headerLineTemplate: DEFAULT_HEADER_LINE_TEMPLATE,\n    },\n  };\n\n  return (\n    <div>\n      <fieldset>\n        <legend>Informações da remessa</legend>\n        <div>\n          <label>CNPJ do fundo</label>\n          <input\n            type=\"text\"\n            value={fundDocument}\n            onChange={(e) => setFundDocument(e.target.value)}\n            maxLength={14}\n          />\n        </div>\n        <div>\n          <label>Tipo da remessa</label>\n          <select\n            value={operationType}\n            onChange={(e) => setOperationType(e.target.value)}\n          >\n            <option value={ACQUISITION}>Aquisição</option>\n            <option value={SETTLEMENT}>Baixa</option>\n            <option value={CHARGE_SETTLEMENT}>Baixa (cobrança)</option>\n            <option value={REPURCHASE}>Recompra</option>\n          </select>\n        </div>\n      </fieldset>\n      {operationType && (\n        <FormBatchOperations\n          {...formProps[operationType]}\n          operationType={operationType}\n          fundDocument={fundDocument}\n        />\n      )}\n    </div>\n  );\n};\n\nconst FormBatchOperations = (props) => {\n  const updateOperation = (props, operationIndex, fieldName, value) => {\n    const newOperations = props.operations.slice();\n\n    newOperations[operationIndex][fieldName] = value;\n\n    props.setOperations(newOperations);\n  };\n\n  const removeOperation = (operationIndex) => {\n    let operationsCopy = props.operations.slice();\n\n    delete operationsCopy[operationIndex];\n\n    props.setOperations(operationsCopy.flat(0));\n  };\n\n  const formatCnabContent = () => {\n    const fundField = HEADER_FIELDS[0];\n    const fundDocumentSliceSize = fundField.endIndex - fundField.startIndex + 1;\n    const formattedFundDocument = props.fundDocument.padStart(\n      fundDocumentSliceSize,\n      \"0\"\n    );\n    const header = props.headerLineTemplate.replaceAt(\n      fundField.startIndex - 1,\n      formattedFundDocument\n    );\n    const body = props.operations.map((operation) => {\n      let formattedLine = props.bodyLineTemplate;\n\n      props.fields.forEach((field) => {\n        const sliceSize = field.endIndex - field.startIndex + 1;\n        const formattedValue = (operation[field.name] || \"\").padStart(\n          sliceSize,\n          \"0\"\n        );\n\n        formattedLine = formattedLine.replaceAt(\n          field.startIndex - 1,\n          formattedValue\n        );\n      });\n\n      return formattedLine;\n    });\n\n    return [header, ...body, DEFAULT_FOOTER_LINE_TEMPLATE].join(\"\\n\");\n  };\n\n  return (\n    <fieldset>\n      <legend>Informações da remessa - Aquisição</legend>\n      <div>\n        <button\n          onClick={() =>\n            createOperation(props, props.operations, props.setOperations, props.setLargeCnabModeEnabled, 1)\n          }\n        >\n          Adicionar 1 linha\n        </button>\n        <br />\n        <button\n          onClick={() =>\n            createOperation(props, props.operations, props.setOperations, props.setLargeCnabModeEnabled, 10)\n          }\n        >\n          Adicionar 10 linhas\n        </button>\n        <br />\n        <button\n          onClick={() =>\n            createOperation(props, props.operations, props.setOperations, props.setLargeCnabModeEnabled, 100)\n          }\n        >\n          Adicionar 100 linhas\n        </button>\n        <br />\n        <button\n          onClick={() =>\n            createOperation(props, props.operations, props.setOperations, props.setLargeCnabModeEnabled, 1000)\n          }\n        >\n          Adicionar 1.000 linhas\n        </button>\n        <br />\n        <button\n          onClick={() =>\n            createOperation(props, props.operations, props.setOperations, props.setLargeCnabModeEnabled, 10000)\n          }\n        >\n          Adicionar 10.000 linhas\n        </button>\n        <br />\n        <button\n          onClick={() =>\n            createOperation(props, props.operations, props.setOperations, props.setLargeCnabModeEnabled, 25000)\n          }\n        >\n          Adicionar 25.000 linhas\n        </button>\n        <br />\n        <button\n          onClick={() =>\n            createOperation(props, props.operations, props.setOperations, props.setLargeCnabModeEnabled, 50000)\n          }\n        >\n          Adicionar 50.000 linhas\n        </button>\n        <br />\n        <button\n          onClick={() =>\n            createOperation(props, props.operations, props.setOperations, props.setLargeCnabModeEnabled, 100000)\n          }\n        >\n          Adicionar 100.000 linhas\n        </button>\n      </div>\n      <hr />\n      <div>\n        <button onClick={() => downloadAsTxt(props, formatCnabContent())}>\n          Baixar CNAB\n        </button>\n      </div>\n      <hr />\n      {\n        props.largeCnabModeEnabled && (\n        \t<p>Desliguei o preview para CNABs muito grandes para não travar o navegador, mas o botão de download ainda funciona, só clicar alí :)</p>\n        )\n      }\n      {\n        !props.largeCnabModeEnabled && (\n          <div>\n            <table>\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Linha</th>\n                  {props.fields.map((field, index) => (\n                    <th key={index}>{field.description}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {props.operations.map((operation, index) =>\n                  renderOperationForm(\n                    props,\n                    operation,\n                    index,\n                    updateOperation,\n                    removeOperation\n                  )\n                )}\n              </tbody>\n            </table>\n            <textarea\n              key={new Date().getTime()}\n              style={{\n                width: \"100%\",\n                height: \"200px\",\n                whiteSpace: \"nowrap\",\n                overflow: \"auto\",\n              }}\n              value={formatCnabContent()}\n              onChange={() => {}}\n            />\n          </div>\n        )\n      }\n    </fieldset>\n  );\n};\n\nconst renderOperationForm = (\n  props,\n  operation,\n  operationIndex,\n  updateOperation,\n  removeOperation\n) => {\n  return (\n    <tr key={operationIndex}>\n      <td>\n        <button onClick={() => removeOperation(operationIndex)}>Remover</button>\n      </td>\n      <td style={{ textAlign: \"center\" }}>{operationIndex + 1}</td>\n      {props.fields.map((field) =>\n        renderOperationFormField(\n          props,\n          operation,\n          operationIndex,\n          updateOperation,\n          field\n        )\n      )}\n    </tr>\n  );\n};\n\nconst renderOperationFormField = (\n  props,\n  operation,\n  operationIndex,\n  updateOperation,\n  field\n) => {\n  const key = `${operationIndex}-${field.name}`;\n  return (\n    <td key={key}>\n      {field.options ? (\n        <select\n          value={operation[field.name]}\n          onChange={(e) =>\n            updateOperation(props, operationIndex, field.name, e.target.value)\n          }\n        >\n          {field.options.map((option, index) => (\n            <option key={index} value={option.value}>\n              {option.description}\n            </option>\n          ))}\n        </select>\n      ) : (\n        <input\n          type=\"text\"\n          maxLength={field.maxLength}\n          value={operation[field.name]}\n          onChange={(e) =>\n            updateOperation(props, operationIndex, field.name, e.target.value)\n          }\n        />\n      )}\n    </td>\n  );\n};\n\nconst createOperation = (\n  props,\n  operations,\n  setOperations,\n  setLargeCnabModeEnabled,\n  count = 1,\n  autoFill = true\n) => {\n  let newOperations = [];\n\n  for (let i = 0; i < count; i++) {\n    let newOperation = {};\n\n    props.fields.forEach((field) => {\n      newOperation[field.name] = autoFill\n        ? typeof field.defaultValue === \"function\"\n          ? field.defaultValue({ props: props, index: i })\n          : field.defaultValue\n        : undefined;\n    });\n\n    newOperations.push(newOperation);\n  }\n\n  setLargeCnabModeEnabled(count > 1000);\n  setOperations([...operations, ...newOperations]);\n};\n\nconst HEADER_FIELDS = [\n  {\n    name: \"documentoFundo\",\n    description: \"CNPJ do fundo\",\n    startIndex: 27,\n    endIndex: 46,\n    defaultValue: \"02968340000489\",\n    maxLength: 14,\n  },\n];\n\nconst ACQUISITION_FIELDS = [\n  {\n    name: \"numeroDocumentoRecebivel\",\n    description: \"No de controle do participante\",\n    startIndex: 38,\n    endIndex: 62,\n    defaultValue: (_options) => faker.random.alphaNumeric(25),\n    maxLength: 25,\n  },\n  {\n    name: \"cnpjCedente\",\n    description: \"CNPJ do cedente\",\n    startIndex: 381,\n    endIndex: 394,\n    defaultValue: \"47586383000438\",\n    maxLength: 14,\n  },\n  {\n    name: \"coObrigacao\",\n    description: \"Co-obrigação\",\n    startIndex: 21,\n    endIndex: 22,    \n    defaultValue: \"01\",\n    options: [\n      {\n        value: \"01\",\n        description: \"Com co-obrigação\",\n      },\n      {\n        value: \"02\",\n        description: \"Sem co-obrigação\",\n      }\n    ],\n    maxLength: 2,\n  },\n  {\n    name: \"tipoRecebivel\",\n    description: \"Tipo do recebível\",\n    startIndex: 148,\n    endIndex: 149,    \n    defaultValue: \"01\",\n    options: [\n      {\n        value: \"01\",\n        description: \"Duplicata\",\n      },\n      {\n        value: \"51\",\n        description: \"Cheque\",\n      },\n      {\n        value: \"60\",\n        description: \"Contrato\",\n      },\n      {\n        value: \"30\",\n        description: \"CCB\",\n      },\n      {\n        value: \"02\",\n        description: \"Nota promissória\",\n      },\n      {\n        value: \"65\",\n        description: \"Fatura\",\n      }\n    ],\n    maxLength: 2,\n  },\n  {\n    name: \"documentoSacado\",\n    description: \"CPF/CNPJ do sacado\",\n    startIndex: 221,\n    endIndex: 234,\n    defaultValue: (_options) => generate(),\n    maxLength: 14,\n  },\n  {\n    name: \"dataEmissao\",\n    description: \"Data de emissão - dd/mm/yy\",\n    startIndex: 151,\n    endIndex: 156,\n    defaultValue: \"010121\",\n    maxLength: 6,\n  },\n  {\n    name: \"dataVencimento\",\n    description: \"Data de vencimento - dd/mm/yyy\",\n    startIndex: 121,\n    endIndex: 126,\n    defaultValue: \"010122\",\n    maxLength: 6,\n  },\n  {\n    name: \"valorAquisicao\",\n    description: \"Valor de aquisição\",\n    startIndex: 193,\n    endIndex: 205,\n    defaultValue: \"90000\",\n    maxLength: 13,\n  },\n  {\n    name: \"valorNominal\",\n    description: \"Valor nominal\",\n    startIndex: 127,\n    endIndex: 139,\n    defaultValue: \"100000\",\n    maxLength: 13,\n  },\n  {\n    name: \"identificacaoOcorrencia\",\n    description: \"Ocorrência\",\n    startIndex: 109,\n    endIndex: 110,\n    defaultValue: \"01\",\n    maxLength: 2,\n  },\n];\n\nconst SETTLEMENT_FIELDS = [\n  {\n    name: \"numeroDocumentoRecebivel\",\n    description: \"No de controle do participante\",\n    startIndex: 38,\n    endIndex: 62,\n    defaultValue: (options) => {\n      const matchingAcquisition = options.props.acquisitions[options.index];\n      return matchingAcquisition\n        ? matchingAcquisition.numeroDocumentoRecebivel\n        : \"\";\n    },\n    maxLength: 25,\n  },\n  {\n    name: \"valorPago\",\n    description: \"Valor pago\",\n    startIndex: 83,\n    endIndex: 92,\n    defaultValue: \"100000\",\n    maxLength: 10,\n  },\n  {\n    name: \"valorAbatimento\",\n    description: \"Valor de abatimento\",\n    startIndex: 206,\n    endIndex: 218,\n    defaultValue: \"0\",\n    maxLength: 13,\n  },\n  {\n    name: \"identificacaoOcorrencia\",\n    description: \"Ocorrência\",\n    startIndex: 109,\n    endIndex: 110,\n    defaultValue: \"02\",\n    options: [\n      {\n        value: \"02\",\n        description: \"Baixa total\",\n      },\n      {\n        value: \"14\",\n        description: \"Baixa parcial\",\n      },\n    ],\n    maxLength: 2,\n  },\n];\n\nconst CHARGE_SETTLEMENT_FIELDS = [\n  {\n    name: \"numeroDocumentoRecebivel\",\n    description: \"No de controle do participante\",\n    startIndex: 38,\n    endIndex: 62,\n    defaultValue: (options) => {\n      const matchingAcquisition = options.props.acquisitions[options.index];\n      return matchingAcquisition\n        ? matchingAcquisition.numeroDocumentoRecebivel\n        : \"\";\n    },\n    maxLength: 25,\n  },\n  {\n    name: \"valorPago\",\n    description: \"Valor pago\",\n    startIndex: 83,\n    endIndex: 92,\n    defaultValue: \"100000\",\n    maxLength: 10,\n  },\n  {\n    name: \"valorAbatimento\",\n    description: \"Valor de abatimento\",\n    startIndex: 206,\n    endIndex: 218,\n    defaultValue: \"0\",\n    maxLength: 13,\n  },\n];\n\nconst REPURCHASE_FIELDS = [\n  {\n    name: \"numeroDocumentoRecebivel\",\n    description: \"No de controle do participante\",\n    startIndex: 38,\n    endIndex: 62,\n    defaultValue: (_options) => faker.random.alphaNumeric(25),\n    maxLength: 25,\n  },\n  {\n    name: \"identificacaoOcorrencia\",\n    description: \"Ocorrência\",\n    startIndex: 109,\n    endIndex: 110,\n    defaultValue: \"84\",\n    options: [\n      {\n        value: \"84\",\n        description: \"Aquisição\",\n      },\n      {\n        value: \"72\",\n        description: \"Baixa parcial\",\n      },\n      {\n        value: \"74\",\n        description: \"Baixa total\",\n      },\n    ],\n    maxLength: 2,\n  },\n  {\n    name: \"cnpjCedente\",\n    description: \"CNPJ do cedente\",\n    startIndex: 381,\n    endIndex: 394,\n    defaultValue: \"47586383000438\",\n    maxLength: 14,\n  },\n  {\n    name: \"documentoSacado\",\n    description: \"CPF/CNPJ do sacado\",\n    startIndex: 221,\n    endIndex: 234,\n    defaultValue: (_options) => generate(),\n    maxLength: 14,\n  },\n  {\n    name: \"dataEmissao\",\n    description: \"Data de emissão - dd/mm/yy\",\n    startIndex: 151,\n    endIndex: 156,\n    defaultValue: \"010121\",\n    maxLength: 6,\n  },\n  {\n    name: \"dataVencimento\",\n    description: \"Data de vencimento - dd/mm/yyy\",\n    startIndex: 121,\n    endIndex: 126,\n    defaultValue: \"010122\",\n    maxLength: 6,\n  },\n  {\n    name: \"valorAquisicao\",\n    description: \"Valor de aquisição\",\n    startIndex: 193,\n    endIndex: 205,\n    defaultValue: \"0\",\n    maxLength: 13,\n  },\n  {\n    name: \"valorNominal\",\n    description: \"Valor nominal\",\n    startIndex: 127,\n    endIndex: 139,\n    defaultValue: \"0\",\n    maxLength: 13,\n  },\n  {\n    name: \"valorPago\",\n    description: \"Valor pago\",\n    startIndex: 83,\n    endIndex: 92,\n    defaultValue: \"0\",\n    maxLength: 10,\n  },\n  {\n    name: \"valorAbatimento\",\n    description: \"Valor de abatimento\",\n    startIndex: 206,\n    endIndex: 218,\n    defaultValue: \"0\",\n    maxLength: 13,\n  },\n];\n\nconst DEFAULT_HEADER_LINE_TEMPLATE =\n  \"01REMESSA01COBRANCA       00000002968340000489ATLANTA FUNDO INV EM DIR CRED 611PAULISTA S.A.  280420        MX0000030                                                                                                                                                                                                                                                                    00000000000000                                               000001\";\n\nconst CHARGE_HEADER_LINE_TEMPLATE =\n  \"02RETORNO01COBRANCA       00000002968340000489ATLANTA FUNDO DE INVESTIMENTO 237BRADESCO       2812200160000002657                                                                                                                                                                                                                                                                          291220         000001\";\n\nconst ACQUISITION_BODY_LINE_TEMPLATE =\n  \"1                   01000301010101C 0226280/0009              0000000000000000000000004129490 280420     0  01006799300123053000000004224590000000001 23042000002            226280             000000001111100000000000000223045934000145VM PARRAS   ME                          RUA DO CACAU   225                      00006799300513454203INTERCOFFEE COM E IND LTDA                    4758638300043835200447586383000438550050000679931100064517000002\";\n\nconst SETTLEMENT_BODY_LINE_TEMPLATE =\n  \"1                   01000301010101C 0226280/0009              0000000000000000000000004129490 280420     0  02006799300123053000000004224590000000001 23042000002            226280             000000001111100000000000000223045934000145VM PARRAS   ME                          RUA DO CACAU   225                      00006799300513454203INTERCOFFEE COM E IND LTDA                    4758638300043835200447586383000438550050000679931100064517000002\";\n\nconst CHARGE_SETTLEMENT_BODY_LINE_TEMPLATE =\n  \"1                   01000301010101C 0226280/0009              0000000000000000000000004129490 280420     0  02006799300123053000000004224590000000001 23042000002            226280             000000001111100000000000000223045934000145VM PARRAS   ME                          RUA DO CACAU   225                      00006799300513454203INTERCOFFEE COM E IND LTDA                    47586383000438000002\";\n\nconst REPURCHASE_BODY_LINE_TEMPLATE =\n  \"1                   01000301010101C 0226280/0009              0000000000000000000000004129490 280420     0  02006799300123053000000004224590000000001 23042000002            226280             000000001111100000000000000223045934000145VM PARRAS   ME                          RUA DO CACAU   225                      00006799300513454203INTERCOFFEE COM E IND LTDA                    47586383000438000002\";\n\nconst DEFAULT_FOOTER_LINE_TEMPLATE =\n  \"9                                                                                                                                                                                                                                                                                                                                                                                                                                                     000018\";\n\nconst ACQUISITION = \"acquisition\";\n\nconst SETTLEMENT = \"settlement\";\n\nconst CHARGE_SETTLEMENT = \"chargeSettlement\";\n\nconst REPURCHASE = \"repurchase\";\n\nconst translateOperationName = (operation) => {\n\tlet nameDictionary = {}\n  \n  nameDictionary[ACQUISITION] = 'aquisição';\n  nameDictionary[SETTLEMENT] = 'baixa';\n  nameDictionary[CHARGE_SETTLEMENT] = 'baixa_por_cobrança';\n  nameDictionary[REPURCHASE] = 'recompra';\n  \n  return nameDictionary[operation];\n}\n\nconst downloadAsTxt = (props, text) => {\n  const element = document.createElement(\"a\");\n\tconst operationName = translateOperationName(props.operationType)\n  const fileName = `${new Date().getTime()} - cnab_${operationName} - ${props.operations.length} linhas.txt`\n\n\telement.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", fileName);\n  element.style.display = \"none\";\n\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n\n// eslint-disable-next-line no-extend-native\nString.prototype.replaceAt = function (index, replacement) {\n  return (\n    this.substr(0, index) +\n    replacement +\n    this.substr(index + replacement.length)\n  );\n};\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst ACQUISITION = \"acquisition\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App fundDocument={\"02968340000489\"} operationType={ACQUISITION} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}